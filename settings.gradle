pluginManagement {
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven {
            allowInsecureProtocol = true
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

// VERSION_CATALOGS当前并不是稳定版本功能
// 所以需要预先开启功能预览 enableFeaturePreview('FEATURE')
//enableFeaturePreview("VERSION_CATALOGS")

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven {
            allowInsecureProtocol = true
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }
        google()
        mavenCentral()
    }

    versionCatalogs {
        libs {
//            from(files('../gradle/libs.versions.toml'))
        }
    }
}
// 自定义打包名称
//    android.applicationVariants.all { variant ->
//        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apks")
//        variant.outputs.all {
//            outputFileName = "${buildType.name}_v${defaultConfig.versionName}_${defaultConfig.versionCode}.apk"
//        }
//    }
//    applicationVariants.all { variant ->
//        // 打包完成后复制到的目录
//        def outputFileDir = "${project.projectDir.absolutePath}/release"
//        // 打包完成后做的一些事,复制apk到指定文件夹
//        variant.assemble.doLast {
//            File out = new File(outputFileDir)
//            copy {
//                variant.outputs.forEach { file ->
//                    copy {
//                        from file.outputFile
//                        into out
//                    }1
//                }
//            }
//        }
//    }
rootProject.name = "Synthesis-project"
include ':app'
include ':lib_base'
include ':module_permission'
include ':module_material'
include ':module_widget'
include ':module_java8'
//include ':module_groovy'
include ':module_spi'
include ':module_animation'
include ':module_tensorflow'
include ':module_splash_screen'
include ':module_mlkit'
include ':module_java11'
include ':module_pick'
include ':module_notification'
include ':module_service'
include ':module_media2'
include ':module_media3'
include ':module_core_ktx'
include ':module_other'
include ':module_versions_catalog'
include ':module_jdbc_mysql'
include ':module_ktor'
include ':module_koin'
include ':module_leakcanray'
include ':module_mediastore'
include ':module_recyclerview'
include ':module_share'
include ':tangram'
include ':module_constraintlayout'
include ':module_coli'
include ':module_booster'
include ':module_jni_json'
include ':module_anko'
include ':module_splitties'
include ':module_sqldelight'
include ':module_transition'
include ':module_seismic'
include ':module_thread'
include ':module_cronet'
include ':module_nearby'
include ':module_crop'
include ':module_photo'
include ':module_section'
include ':acra'
include ':module_attrsense'
include ':modulejar'
include ':module_jni'
include ':module_webrtc'
include ':module_mediarouter'
include ':module_gesture'
