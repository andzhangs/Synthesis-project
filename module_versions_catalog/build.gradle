plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

/*加载baseConstants.properties信息到该gradle文件中*/
def keystorePropertiesFile = rootProject.file("baseConstants.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.module.versions.catalog'
    compileSdk libs.versions.compileSdkVersion.get().toInteger()

    defaultConfig {
        applicationId libs.versions.applicationId.get()
        minSdk libs.versions.minSdkVersion.get().toInteger()
        targetSdk libs.versions.compileSdkVersion.get().toInteger()
        versionCode libs.versions.versionCode.get().toInteger()
        versionName libs.versions.versionName.get()
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "BASE_HTTP_URL", keystoreProperties['DebugBaseHttpUrl'])
        buildConfigField("String", "WEB_LINK", rootProject.ext.BAIDU_LINK)  //rootProject.ext是访问项目级别的gradle.properties文件的
        buildConfigField("String", "DebugBaseHttpUrl", rootProject.ext.DebugBaseHttpUrl)  //rootProject.ext是访问自定义的.properties文件
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures{
        buildConfig true
    }
}

dependencies {
    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test
    androidTestImplementation libs.espresso.core
    implementation libs.multiDex
}